// Problem :- Trapping Rain Water [LeetCode Problem number: 42]

// Soluiton:-

public class Main

{
    public static void trappedWater(int []arr){
        int n = arr.length;
        
        // Finding leftMost
        int leftMost[] = new int[n];
        leftMost[0] = arr[0];
        for(int i=1; i<n; i++){
            leftMost[i] = Math.max(arr[i], leftMost[i-1] );
            
        }
        
        //finding RightMost
        int rightMost[] = new int[n];
        rightMost[n-1] = arr[n-1];
        for(int i=n-2; i>=0; i--){
            rightMost[i] = Math.max(arr[i], rightMost[i+1]);
        }
        for(int i=0; i<n; i++){
            System.out.print(leftMost[i] + " ");
        }
        System.out.println();
        
        for(int i=0; i<n; i++){
            System.out.print(rightMost[i] + " ");
        }
        System.out.println();
        
        //calculate the area How many area is covered by trappedWater
        int sum =0;
        for(int i=1; i<n-1; i++){
            int min = Math.min(leftMost[i], rightMost[i]);
            
            int diff= min - arr[i];
            sum += diff; 
        }
        
        System.out.print("Total TrappedWater is: "+ sum);
    }
    
	public static void main(String[] args) {
		int arr[] = {0,1,0,2,1,0,1,3,2,1,2,1};
        trappedWater(arr);
		
	}
}
